name: Node App CI/CD

on:
  push:
    branches: [ develop, master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mitmproxy:
        image: mitmproxy/mitmproxy

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set environment variables
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          echo "HTTP_PROXY=http://127.0.0.1:8080" >> $GITHUB_ENV
          echo "HTTPS_PROXY=https://127.0.0.1:8080" >> $GITHUB_ENV
      
      - name: Install proxy service
        run: |
          sudo apt update
          # curl --proxy 127.0.0.1:8080 http://127.0.0.1:8080
          # docker images
          # docker run --rm -it -p 8080:8080 mitmproxy/mitmproxy
          # docker ps | grep mitmproxy | cut -c 1-12

      #     # Install Proxyfy
      #     wget https://github.com/projectdiscovery/proxify/releases/download/v0.0.5/proxify_0.0.5_linux_amd64.zip
      #     unzip proxify_0.0.5_linux_amd64.zip
      #     ./proxify -http-proxy http://127.0.0.1:8080
      #     # Install mitmtmproxy
      #     # sudo apt install python3-pip
      #     # echo "Installing mitmproxy using pip................."
      #     # pip3 install mitmproxy
      - name: Run mitmproxy
        shell: 'script -q -e -c "bash {0}"'
        run: |
          # proxify
          # mitmproxy
          # docker images
          mkdir -p ~/.mitmproxy
          docker run -d --rm -it --name mitmproxy_test -v ~/.mitmproxy:/home/mitmproxy/.mitmproxy -p 8080:8080 mitmproxy/mitmproxy
          docker ps
          CONTAINER_ID=$(docker ps | grep mitmproxy | cut -c 1-12)
          DIR=$(pwd)
          echo "Container ID: $CONTAINER_ID"
          echo "My current dir: $DIR"
          # echo "Show contents of mitmproxy container: /home/mitmproxy/.mitmproxy"
          # docker exec -it $CONTAINER_ID ls -ahl /home/mitmproxy/.mitmproxy
          echo "Executing docker cp..."
          # docker cp $CONTAINER_ID:/home/mitmproxy/.mitmproxy ./mitm
          ls -ahl
          echo "Showing contents of $DIR/.mitmproxy"
          ls -ahl ~/.mitmproxy
          cat ~/.mitmproxy/mitmproxy-ca-cert.pem

      - name: Build, tag, and push image
        env:
          IMAGE_TAG: "${{ github.sha }}" 
        run: |
          echo "Building for git branch: $GIT_BRANCH"
          docker build --no-cache -t mitm_proxy_app:$IMAGE_TAG .