name: Node App CI/CD

on:
  push:
    branches: [ develop, master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mitmproxy:
        image: mitmproxy/mitmproxy

    steps:
      - name: Get Public IP
        id: ip
        uses: haythem/public-ip@v1.2

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set environment variables
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          # echo "HTTP_PROXY=http://${{ steps.ip.outputs.ipv4 }}:8080" >> $GITHUB_ENV
          # echo "HTTPS_PROXY=http://${{ steps.ip.outputs.ipv4 }}:8080" >> $GITHUB_ENV
          echo "HTTP_PROXY=http://127.0.0.1:8080" >> $GITHUB_ENV
          echo "HTTPS_PROXY=http://127.0.0.1:8080" >> $GITHUB_ENV
      
      - name: Install proxy service
        run: |
          sudo apt update
          # curl --proxy 127.0.0.1:8080 http://127.0.0.1:8080
          # docker images
          # docker run --rm -it -p 8080:8080 mitmproxy/mitmproxy
          # docker ps | grep mitmproxy | cut -c 1-12

      #     # Install Proxyfy
      #     wget https://github.com/projectdiscovery/proxify/releases/download/v0.0.5/proxify_0.0.5_linux_amd64.zip
      #     unzip proxify_0.0.5_linux_amd64.zip
      #     ./proxify -http-proxy http://127.0.0.1:8080
      #     # Install mitmtmproxy
      #     # sudo apt install python3-pip
      #     # echo "Installing mitmproxy using pip................."
      #     # pip3 install mitmproxy
      - name: Run mitmproxy
        shell: 'script -q -e -c "bash {0}"'
        run: |
          # proxify
          # mitmproxy
          # docker images
          # mkdir -p ~/.mitmproxy
          docker run -d --rm -it --name mitmproxy_test -v ~/.mitmproxy:/home/mitmproxy/.mitmproxy -p 8080:8080 mitmproxy/mitmproxy mitmdump
          until [ "`docker inspect -f {{.State.Running}} mitmproxy_test`"=="true" ]; do
            echo "Waiting for completion of mitmproxy_test"
            sleep 1.0;
          done;
          sleep 10.0;
          docker ps
          # CONTAINER_ID=$(docker ps | grep mitmproxy | cut -c 1-12)
          # DIR=$(pwd)
          # echo "Container ID: $CONTAINER_ID"
          # echo "My current dir: $DIR"
          echo "Show contents of mitmproxy container: /home/mitmproxy/.mitmproxy"
          docker exec -it mitmproxy_test ls -ahl /home/mitmproxy/.mitmproxy
          # echo "Executing docker cp..."
          # docker cp $CONTAINER_ID:/home/mitmproxy/.mitmproxy ./mitm
          # ls -ahl 
          echo "Showing contents of ~/.mitmproxy"
          ls -ahl ~/.mitmproxy
          echo "Print mitmproxy-ca-cert.pem"
          CA=$(cat ~/.mitmproxy/mitmproxy-ca-cert.pem)
          echo "CA=$CA" >> $GITHUB_ENV
          # echo "Testing with curl using proxy"
          curl --cacert ~/.mitmproxy/mitmproxy-ca-cert.pem https://jsonplaceholder.typicode.com/todos/1 | jq 
          # echo "Set npm config"
          # npm config set strict-ssl false
          # npm config set https-proxy http://127.0.0.1:8080

      - name: Build, tag, and push image
        env:
          IMAGE_TAG: "${{ github.sha }}" 
        run: |
          echo "Building for git branch: $GIT_BRANCH"
          echo "Value of HTTPS_PROXY=$HTTPS_PROXY"
          echo "Value of HTTP_PROXY=$HTTP_PROXY"
          echo "Value of CA=$CA"
          docker build --no-cache --build-arg HTTPS_PROXY=$HTTPS_PROXY --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg CA=$CA -t mitm_proxy_app:$IMAGE_TAG .
      - name: View mitmproxy Logs
        shell: 'script -q -e -c "bash {0}"'
        run: |
          docker logs mitmproxy_test